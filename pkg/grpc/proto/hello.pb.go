// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package proto

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CurlRequest struct {
	// 下载地址
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurlRequest) Reset()         { *m = CurlRequest{} }
func (m *CurlRequest) String() string { return proto.CompactTextString(m) }
func (*CurlRequest) ProtoMessage()    {}
func (*CurlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{0}
}

func (m *CurlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurlRequest.Unmarshal(m, b)
}
func (m *CurlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurlRequest.Marshal(b, m, deterministic)
}
func (m *CurlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurlRequest.Merge(m, src)
}
func (m *CurlRequest) XXX_Size() int {
	return xxx_messageInfo_CurlRequest.Size(m)
}
func (m *CurlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CurlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CurlRequest proto.InternalMessageInfo

func (m *CurlRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Response struct {
	// 数据
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CurlRequest)(nil), "proto.CurlRequest")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_61ef911816e0a8ce) }

var fileDescriptor_61ef911816e0a8ce = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8d, 0x41, 0x4a, 0x03, 0x31,
	0x14, 0x86, 0x89, 0x6d, 0x65, 0x4c, 0x15, 0x21, 0x6e, 0x64, 0x10, 0x91, 0x59, 0xa9, 0xd8, 0x09,
	0xea, 0xce, 0x95, 0xd6, 0x03, 0x08, 0xe3, 0x09, 0xd2, 0xe9, 0x23, 0x0d, 0xc4, 0xbc, 0xf8, 0x92,
	0x8c, 0x76, 0xeb, 0xca, 0xbd, 0x47, 0xf3, 0x0a, 0x9e, 0xc2, 0x95, 0x34, 0x53, 0xa1, 0xd0, 0x55,
	0x5e, 0xfe, 0xff, 0xe3, 0xfb, 0xf9, 0x78, 0x01, 0xd6, 0x62, 0xed, 0x09, 0x23, 0x8a, 0x51, 0x7e,
	0xca, 0x07, 0x6d, 0xe2, 0x22, 0xcd, 0xea, 0x16, 0x5f, 0x24, 0xb8, 0x0e, 0x97, 0x9e, 0xf0, 0x7d,
	0x29, 0x73, 0xd9, 0x4e, 0x34, 0xb8, 0x49, 0xa7, 0xac, 0x99, 0xab, 0x08, 0x72, 0xeb, 0xe8, 0x4d,
	0xe5, 0x89, 0x46, 0xd4, 0x16, 0xa4, 0xf2, 0x46, 0x2a, 0xe7, 0x30, 0xaa, 0x68, 0xd0, 0x85, 0x75,
	0x7b, 0xb5, 0xa1, 0x0a, 0x6f, 0x4a, 0x6b, 0x20, 0x89, 0x3e, 0x13, 0xdb, 0x74, 0x75, 0xc1, 0xc7,
	0x8f, 0x89, 0x6c, 0x03, 0xaf, 0x09, 0x42, 0x14, 0x25, 0x1f, 0x24, 0xb2, 0xc7, 0xec, 0x8c, 0x9d,
	0xef, 0x4d, 0x8b, 0xdf, 0xe9, 0x88, 0x06, 0x9f, 0x8c, 0x35, 0xab, 0xb0, 0x3a, 0xe5, 0x45, 0x03,
	0xc1, 0xa3, 0x0b, 0x20, 0x04, 0x1f, 0xce, 0x55, 0x54, 0x19, 0xdc, 0x6f, 0xf2, 0x7d, 0xf3, 0xd4,
	0xab, 0x9e, 0x81, 0x3a, 0xd3, 0x82, 0xb8, 0xe7, 0xc3, 0xd5, 0x57, 0x88, 0x7e, 0xa9, 0xde, 0x98,
	0x29, 0x0f, 0xd7, 0xd9, 0xbf, 0xaf, 0x3a, 0xfa, 0xf8, 0xfe, 0xf9, 0xda, 0x39, 0xa8, 0x0a, 0xd9,
	0x5d, 0xcb, 0x36, 0x91, 0xbd, 0x63, 0x97, 0xb3, 0xdd, 0x0c, 0xdd, 0xfe, 0x05, 0x00, 0x00, 0xff,
	0xff, 0x27, 0xaa, 0xfa, 0x28, 0x47, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CurlServiceClient is the client API for CurlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CurlServiceClient interface {
	Curl(ctx context.Context, in *CurlRequest, opts ...grpc.CallOption) (*Response, error)
}

type curlServiceClient struct {
	cc *grpc.ClientConn
}

func NewCurlServiceClient(cc *grpc.ClientConn) CurlServiceClient {
	return &curlServiceClient{cc}
}

func (c *curlServiceClient) Curl(ctx context.Context, in *CurlRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.CurlService/Curl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CurlServiceServer is the server API for CurlService service.
type CurlServiceServer interface {
	Curl(context.Context, *CurlRequest) (*Response, error)
}

// UnimplementedCurlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCurlServiceServer struct {
}

func (*UnimplementedCurlServiceServer) Curl(ctx context.Context, req *CurlRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Curl not implemented")
}

func RegisterCurlServiceServer(s *grpc.Server, srv CurlServiceServer) {
	s.RegisterService(&_CurlService_serviceDesc, srv)
}

func _CurlService_Curl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CurlServiceServer).Curl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CurlService/Curl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CurlServiceServer).Curl(ctx, req.(*CurlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CurlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CurlService",
	HandlerType: (*CurlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Curl",
			Handler:    _CurlService_Curl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}
